{"version":3,"sources":["webpack:///./src/pages/image.js","webpack:///./src/pages/gallery.js"],"names":["ImageHolder","props","useState","slideIndex","setSlideIndex","moveSlides","n","index","dataArray","length","styles","width","objectFit","maxHeight","maxWidth","imageUrl","url","caption","dotArray","i","push","className","onClick","id","src","style","GalleryPage","currentData","setCurrentData","modalRef","useRef","modal","ref","current","display","document","body","overflow","height","data","open","colArray1","colArray2","colArray3","set","thumbnail","console","log","paddingTop"],"mappings":"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","file":"component---src-pages-gallery-js-f0fd6fd73fdbc4214361.js","sourcesContent":["import React, {useState } from 'react';\n\nimport '../styles/image.scss';\n\n\nconst ImageHolder = (props) => {\n    // let slidesContainerRef = useRef(null);\n    // let dotContainerRef = useRef(null);\n    let [slideIndex, setSlideIndex] = useState(0);\n\n    // // Next/previous controls\n    const moveSlides = (n) => {\n        let index = slideIndex += n;\n        if (index > props.dataArray.length - 1) { index = 0 };\n        if (index < 0) { index = props.dataArray.length - 1 };\n        setSlideIndex(index);\n        //   showSlides(slideIndex += n)\n\n    };\n\n    const currentSlide = (n) => (\n        setSlideIndex(n)\n    );\n    const styles = { width: '100%',  objectFit: \"cover\", maxHeight: props.maxHeight, maxWidth : props.maxWidth}\n    const imageUrl = props.dataArray[slideIndex].url;\n    const caption = props.dataArray[slideIndex].caption;\n    let dotArray = []\n    for (let i = 0; i < props.dataArray.length; i++){\n        dotArray.push(\n            <div>\n                <span className=\"dot\" onClick={() => currentSlide(i)}></span>\n            </div>\n        )\n    }\n    return (\n        <div id=\"image-component-container\">\n            <div className=\"slideshow-container\">\n                <div className=\"mySlides fade\">\n                    {/* <div className=\"numbertext\">1 / 3</div> */}\n                    <img src={imageUrl} style={styles} />\n                    <div className=\"text\"><p>{caption}</p></div>\n                </div>\n                <a className=\"prev\" onClick={() => moveSlides(-1)}>&#10094;</a>\n                <a className=\"next\" onClick={() => moveSlides(1)}>&#10095;</a>\n            </div>\n            <br></br>\n            <div id=\"dot-container\">\n                {dotArray}\n            </div>\n        \n        </div>\n    );\n}\n\nexport default ImageHolder;","import React, { useRef, useState } from 'react';\nimport ImageHolder from \"./image\";\n\nimport '../styles/gallery.scss';\n\n\nconst GalleryPage = (props) => {\n    const [currentData, setCurrentData] = useState(0);\n    const modalRef = useRef(null);\n    const imageHolderRef = useRef(null);\n    let variable = 1;\n    const openModal = () => {\n        modalRef.current.style.display = \"flex\";\n        document.body.style.overflow = \"hidden\";\n\n    }\n    const closeModal = () => {\n        modalRef.current.style.display = \"none\";\n        document.body.style.overflow = \"visible\";\n    }\n\n    const modal = (\n        <div className=\"modal\" ref={modalRef}>\n            <div className=\"overlay\"></div>\n            <span className=\"close\" onClick={closeModal}>X</span>\n            <div id=\"image-holder-container\" style={{ width: props.maxWidth, height: props.maxHeight }}>\n                <ImageHolder\n                    dataArray={props.dataArray[currentData].data}\n                    maxHeight={props.maxHeight}\n                    maxWidth={props.maxWidth}\n                />\n                {currentData}\n            </div>\n        </div>\n    );\n\n    const open = (i) => {\n        setCurrentData(i);\n        openModal();\n        // console.log(variable);\n\n    }\n\n    let colArray1 = [];\n    let colArray2 = [];\n    let colArray3 = [];\n    let modalArray = [];\n    let index = 0;\n    for (let i = 0; i < props.dataArray.length; i++) {\n        const set = props.dataArray[i];\n        //grab index and thumnail and image and pass to gallery page\n\n        switch (index) {\n            case (0):\n                colArray1.push(\n                    <div className=\"thumbnail-container\" onClick={() => open(i)}>\n                        <img className=\"thumbnail-image\" src={set.thumbnail}></img>\n                        <div className=\"caption-overlay\">\n                            <p className=\"caption-text\">{set.caption}</p>\n                        </div>\n                    </div>\n                );\n                break;\n            case (1):\n                colArray2.push(\n                    <div className=\"thumbnail-container\" onClick={() => open(i)}>\n                        <img className=\"thumbnail-image\" src={set.thumbnail}></img>\n                        <div className=\"caption-overlay\">\n                            <p className=\"caption-text\">{set.caption}</p>\n                        </div>\n                    </div>\n                );\n                break;\n            case (2):\n                colArray3.push(\n                    <div className=\"thumbnail-container\" onClick={() => open(i)}>\n                        <img className=\"thumbnail-image\" src={set.thumbnail}></img>\n                        <div className=\"caption-overlay\">\n                            <p className=\"caption-text\">{set.caption}</p>\n                        </div>\n                    </div>\n                );\n                break;\n        }\n        index === 2 ? index = 0 : index++;\n\n    }\n    console.log(\"Redner again\");\n    return (\n        <div style={{paddingTop: \"15vh\"}}>\n        <h2 id=\"gallery-title-text\">Our Residential Work</h2>\n            <div className=\"main-container\" id=\"gallery-container\">\n                {/* <button onClick={openModal}>Click me Motherfucker</button> */}\n                <div className=\"gallery-container-column\">\n                    {colArray1}\n                </div>\n                <div className=\"gallery-container-column\">\n                    {colArray2}\n                </div>\n                <div className=\"gallery-container-column\">\n                    {colArray3}\n                </div>\n            </div>\n            {modal}\n\n        </div>\n    )\n}\n\nexport default GalleryPage;"],"sourceRoot":""}