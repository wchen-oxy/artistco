{"version":3,"sources":["webpack:///./src/pages/image.js"],"names":["ImageHolder","props","useState","slideIndex","setSlideIndex","isClient","setClient","imageSource","dataArray","url","imageCaption","caption","useEffect","moveSlides","n","index","length","dotArray","array","i","push","key","className","style","backgroundColor","onClick","createDotArray","id","src"],"mappings":"2FAAA,0CAiEeA,UA9DK,SAACC,GAAW,IAAD,EACSC,mBAAS,GAAtCC,EADoB,KACRC,EADQ,OAEGF,oBAAS,GAAhCG,EAFoB,KAEVC,EAFU,KAGrBC,EAAcF,EAAWJ,EAAMO,UAAUL,GAAYM,IAAM,GAC3DC,EAAeL,EAAWJ,EAAMO,UAAUL,GAAYQ,QAAU,GAEtEC,qBAAU,kBACNN,GAAU,KACV,IAEJ,IAAMO,EAAa,SAACC,GAChB,IAAIC,EAAQZ,GACZY,GAASD,GACGb,EAAMO,UAAUQ,OAAS,IAAKD,EAAQ,GAC9CA,EAAQ,IAAKA,EAAQd,EAAMO,UAAUQ,OAAS,GAClDZ,EAAcW,IAoBdE,EAAW,GAIf,OAHIZ,GAbmB,SAACa,GACpB,IAD+B,IAAD,WACrBC,GACLD,EAAME,KACF,yBAAKC,IAAKF,GACN,0BAAMG,UAAU,MAChBC,MAAOJ,IAAMhB,EAAa,CAACqB,gBAAiB,WAAa,CAAEA,gBAAiB,QAC5EC,QAAS,kBATrBrB,EASwCe,SAL/BA,EAAI,EAAGA,EAAIlB,EAAMO,UAAUQ,OAAQG,IAAM,EAAzCA,GAaTO,CAAeT,GAGf,yBAAKU,GAAG,uBAAuBN,IAAKhB,GAC/BA,EACG,oCACI,yBAAKiB,UAAU,uBACX,yBAAKA,UAAU,iBACX,yBAAKK,GAAG,QAAQC,IAAKrB,IACrB,yBAAKe,UAAU,OAAOC,MAA+B,IAAxBb,EAAaM,OAAe,CAACQ,gBAAiB,yBAA2B,CAACA,gBAAiB,gBAAgB,2BAAId,KAEhJ,uBAAGY,UAAU,OAAOG,QAAS,kBAAMZ,GAAY,KAA/C,KACA,uBAAGS,UAAU,OAAOG,QAAS,kBAAMZ,EAAW,KAA9C,MAEJ,6BACA,yBAAKc,GAAG,iBACHV,IAGT,iG","file":"component---src-pages-image-js-50d24f564aac145e926b.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/image.scss';\n\nconst ImageHolder = (props) => {\n    const [slideIndex, setSlideIndex] = useState(0);\n    const [isClient, setClient] = useState(false);\n    const imageSource = isClient ? props.dataArray[slideIndex].url : \"\";\n    const imageCaption = isClient ? props.dataArray[slideIndex].caption : \"\";\n\n    useEffect(() =>\n        setClient(true),\n        []);\n\n    const moveSlides = (n) => {\n        let index = slideIndex;\n        index += n;\n        if (index > props.dataArray.length - 1) { index = 0 };\n        if (index < 0) { index = props.dataArray.length - 1 };\n        setSlideIndex(index);\n        //   showSlides(slideIndex += n)\n    };\n\n    const currentSlide = (n) => (\n        setSlideIndex(n)\n    );\n\n    const createDotArray = (array) => {\n        for (let i = 0; i < props.dataArray.length; i++) {\n            array.push(\n                <div key={i}>\n                    <span className=\"dot\" \n                    style={i === slideIndex ? {backgroundColor: \"#4a4949\"} : { backgroundColor: \"#bbb\"}} \n                    onClick={() => currentSlide(i)}></span>\n                </div>\n            );\n        }\n    }\n\n    let dotArray = [];\n    if (isClient) {\n        createDotArray(dotArray)\n    };\n    return (\n        <div id=\"image-main-container\" key={isClient}>\n            {isClient ? (\n                <>\n                    <div className=\"slideshow-container\">\n                        <div className=\"mySlides fade\">\n                            <img id=\"image\" src={imageSource}  />\n                            <div className=\"text\" style={imageCaption.length !== 0 ? {backgroundColor: \"rgba(44, 44, 44, 0.5)\"} : {backgroundColor: \"transparent\"}}><p>{imageCaption}</p></div>\n                        </div>\n                        <a className=\"prev\" onClick={() => moveSlides(-1)}>&#10094;</a>\n                        <a className=\"next\" onClick={() => moveSlides(1)}>&#10095;</a>\n                    </div>\n                    <br></br>\n                    <div id=\"dot-container\">\n                        {dotArray}\n                    </div>\n                </>) :\n                <p>The images need to be rendered again. Please refresh your page.</p>\n            }\n        </div>\n    );\n}\n\nexport default ImageHolder;"],"sourceRoot":""}