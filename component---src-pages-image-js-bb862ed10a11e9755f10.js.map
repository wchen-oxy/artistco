{"version":3,"sources":["webpack:///./src/pages/image.js"],"names":["ImageHolder","props","useState","slideIndex","setSlideIndex","isClient","setClient","console","log","dataArray","imageSource","url","imageCaption","caption","useEffect","moveSlides","n","index","length","id","key","className","src","style","backgroundColor","onClick","array","i","push","createDotArray"],"mappings":"2FAAA,0CAwEeA,UArEK,SAACC,GAAW,IAAD,EACSC,mBAAS,GAAtCC,EADoB,KACRC,EADQ,OAEGF,oBAAS,GAAhCG,EAFoB,KAEVC,EAFU,KAK3BC,QAAQC,IAAI,UACZD,QAAQC,IAAIH,GACZE,QAAQC,IAAIL,GACZI,QAAQC,IAAIP,EAAMQ,WAClB,IAAMC,EAAcL,GAAYJ,EAAMQ,UAAYR,EAAMQ,UAAUN,GAAYQ,IAAM,GAC9EC,EAAeP,GAAYJ,EAAMQ,UAAYR,EAAMQ,UAAUN,GAAYU,QAAU,GAEzFC,qBAAU,WACNR,GAAU,GACVC,QAAQC,IAAI,YAEZ,IAEJ,IAAMO,EAAa,SAACC,GAChB,IAAIC,EAAQd,GACZc,GAASD,GACGf,EAAMQ,UAAUS,OAAS,IAAKD,EAAQ,GAC9CA,EAAQ,IAAKA,EAAQhB,EAAMQ,UAAUS,OAAS,GAClDd,EAAca,IAuBlB,OAFAV,QAAQC,IAAI,UAGR,yBAAKW,GAAG,uBAAuBC,IAAKf,GAC/BA,GAAYJ,EAAMQ,UACf,oCACI,yBAAKY,UAAU,uBACX,yBAAKA,UAAU,iBACX,yBAAKF,GAAG,QAAQG,IAAKZ,IACrB,yBAAKW,UAAU,OAAOE,MAA+B,IAAxBX,EAAaM,OAAe,CAAEM,gBAAiB,yBAA4B,CAAEA,gBAAiB,gBAAiB,2BAAIZ,KAEpJ,uBAAGS,UAAU,OAAOI,QAAS,kBAAMV,GAAY,KAA/C,KACA,uBAAGM,UAAU,OAAOI,QAAS,kBAAMV,EAAW,KAA9C,MAEJ,6BACA,yBAAKI,GAAG,iBA5BD,WAEnB,IADA,IAAIO,EAAQ,GADa,WAEhBC,GACLD,EAAME,KACF,yBAAKR,IAAKO,GACN,0BAAMN,UAAU,MACZE,MAAOI,IAAMxB,EAAa,CAAEqB,gBAAiB,WAAc,CAAEA,gBAAiB,QAC9EC,QAAS,kBAVzBrB,EAU4CuB,SALnCA,EAAI,EAAGA,EAAI1B,EAAMQ,UAAUS,OAAQS,IAAM,EAAzCA,GAST,OAAOD,EAkBUG,KAGT,+B","file":"component---src-pages-image-js-bb862ed10a11e9755f10.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/image.scss';\n\nconst ImageHolder = (props) => {\n    const [slideIndex, setSlideIndex] = useState(0);\n    const [isClient, setClient] = useState(false);\n    // const [imageSource, setImageSource] = useState(\"\");\n    // const [imageCaption, setImageCaption] = useState(\"\");\n    console.log(\"static\");\n    console.log(isClient);\n    console.log(slideIndex);\n    console.log(props.dataArray);\n    const imageSource = isClient && props.dataArray ? props.dataArray[slideIndex].url : \"\";\n    const imageCaption = isClient && props.dataArray ? props.dataArray[slideIndex].caption : \"\";\n\n    useEffect(() => {\n        setClient(true);\n        console.log(\"Effect\")        \n    },\n        []);\n\n    const moveSlides = (n) => {\n        let index = slideIndex;\n        index += n;\n        if (index > props.dataArray.length - 1) { index = 0 };\n        if (index < 0) { index = props.dataArray.length - 1 };\n        setSlideIndex(index);\n        //   showSlides(slideIndex += n)\n    };\n\n    const currentSlide = (n) => (\n        setSlideIndex(n)\n    );\n\n    const createDotArray = () => {\n        let array = [];\n        for (let i = 0; i < props.dataArray.length; i++) {\n            array.push(\n                <div key={i}>\n                    <span className=\"dot\"\n                        style={i === slideIndex ? { backgroundColor: \"#4a4949\" } : { backgroundColor: \"#bbb\" }}\n                        onClick={() => currentSlide(i)}></span>\n                </div>\n            );\n        }\n        return array;\n    }\n    console.log(\"Effect\");\n\n    return (\n        <div id=\"image-main-container\" key={isClient}>\n            {isClient && props.dataArray ? (\n                <>\n                    <div className=\"slideshow-container\">\n                        <div className=\"mySlides fade\">\n                            <img id=\"image\" src={imageSource} />\n                            <div className=\"text\" style={imageCaption.length !== 0 ? { backgroundColor: \"rgba(44, 44, 44, 0.5)\" } : { backgroundColor: \"transparent\" }}><p>{imageCaption}</p></div>\n                        </div>\n                        <a className=\"prev\" onClick={() => moveSlides(-1)}>&#10094;</a>\n                        <a className=\"next\" onClick={() => moveSlides(1)}>&#10095;</a>\n                    </div>\n                    <br></br>\n                    <div id=\"dot-container\">\n                        {createDotArray()}\n                    </div>\n                </>) :\n                <p></p>\n            }\n        </div>\n    );\n}\n\nexport default ImageHolder;"],"sourceRoot":""}