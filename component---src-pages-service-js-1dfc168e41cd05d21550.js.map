{"version":3,"sources":["webpack:///./src/pages/image.js","webpack:///./src/pages/service.js"],"names":["ImageHolder","props","useState","slideIndex","setSlideIndex","isClient","setClient","imageMaxHeight","maxHeight","imageMaxWidth","maxWidth","styles","width","objectFit","useEffect","moveSlides","n","index","dataArray","length","dotArray","array","i","push","key","className","onClick","createDotArray","id","style","src","url","caption","ServicePage","imageContainer","client","alt","descriptionContainer","ref","reference","orientation"],"mappings":"sHAAA,0CAiEeA,UA9DK,SAACC,GAAW,IAAD,EACSC,mBAAS,GAAtCC,EADoB,KACRC,EADQ,OAEGF,oBAAS,GAAhCG,EAFoB,KAEVC,EAFU,KAIrBC,EAAiBF,EAAWJ,EAAMO,UAAY,QAC9CC,EAAgBJ,EAAWJ,EAAMS,SAAW,QAC5CC,EAAS,CAAEC,MAAO,OAAQC,UAAW,QAASL,UAAWD,EAAgBG,SAAUD,GAEzFK,qBAAU,kBACNR,GAAU,KACV,IAEJ,IAAMS,EAAa,SAACC,GAChB,IAAIC,EAAQd,GACZc,GAASD,GACGf,EAAMiB,UAAUC,OAAS,IAAKF,EAAQ,GAC9CA,EAAQ,IAAKA,EAAQhB,EAAMiB,UAAUC,OAAS,GAClDf,EAAca,IAkBdG,EAAW,GAIf,OAHIf,GAXmB,SAACgB,GACpB,IAD+B,IAAD,WACrBC,GACLD,EAAME,KACF,yBAAKC,IAAKF,GACN,0BAAMG,UAAU,MAAMC,QAAS,kBAP3CtB,EAO8DkB,SAHrDA,EAAI,EAAGA,EAAIrB,EAAMiB,UAAUC,OAAQG,IAAM,EAAzCA,GAWTK,CAAeP,GAGf,yBAAKQ,GAAG,4BAA4BC,MAAO,CAACnB,SAAUD,EAAeD,UAAWD,IAC3EF,GAAYJ,EAAMiB,UACf,oCACI,yBAAKO,UAAU,uBACX,yBAAKA,UAAU,iBACX,yBAAKK,IAAK7B,EAAMiB,UAAUf,GAAY4B,IAAKF,MAAOlB,IAClD,yBAAKc,UAAU,QAAO,2BAAIxB,EAAMiB,UAAUf,GAAY6B,WAE1D,uBAAGP,UAAU,OAAOC,QAAS,kBAAMX,GAAY,KAA/C,KACA,uBAAGU,UAAU,OAAOC,QAAS,kBAAMX,EAAW,KAA9C,MAEJ,6BACA,yBAAKa,GAAG,iBACHR,IAGT,iG,2DC3DhB,sDAmEea,UA/DK,SAAChC,GAAW,IAAD,EACGC,oBAAS,GAAhCG,EADoB,KACVC,EADU,KAG3BQ,qBAAU,kBAAMR,GAAU,KAAO,IACjC,IAAMC,EAAiBF,EAAWJ,EAAMiB,UAAUV,UAAY,QACxDC,EAAgBJ,EAAWJ,EAAMiB,UAAUR,SAAW,QAEtDwB,EACD7B,EACG,yBAAKuB,GAAG,0BAA0BC,MAAO,CAACrB,UAAWD,EAAgBG,SAAUD,IAE7D,gBAAjBR,EAAMkC,OACH,kBAAC,UAAD,CACIjB,UAAWjB,EAAMiB,UACjBV,UAAWP,EAAMO,UACjBE,SAAUT,EAAMS,WAGhB,yBAAKkB,GAAG,iCACJ,yBACIA,GAAG,iBACHQ,IAAI,eACJX,UAAU,yBACVK,IAAI,uEAOxB,yBAAKF,GAAG,0BAA0BC,MAAO,CAACrB,UAAWD,EAAgBG,SAAUD,IAC3E,sDAOF4B,EACF,yBAAKZ,UAAU,0BACX,yBAAKG,GAAG,2BACJ,wBAAIH,UAAU,SAASxB,EAAMkC,SAG7B,uBAAGP,GAAG,4BAAN,yJAUZ,OACI,yBAAKH,UAAU,yCAAyCa,IAAKrC,EAAMsC,WACxC,eAAtBtC,EAAMuC,YAA+BN,EAAiBG,EAChC,eAAtBpC,EAAMuC,YAA+BH,EAAuBH","file":"component---src-pages-service-js-1dfc168e41cd05d21550.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/image.scss';\n\nconst ImageHolder = (props) => {\n    const [slideIndex, setSlideIndex] = useState(0);\n    const [isClient, setClient] = useState(false);\n\n    const imageMaxHeight = isClient ? props.maxHeight : \"400px\";\n    const imageMaxWidth = isClient ? props.maxWidth : \"400px\";\n    const styles = { width: '100%', objectFit: \"cover\", maxHeight: imageMaxHeight, maxWidth: imageMaxWidth };\n\n    useEffect(() =>\n        setClient(true),\n        []);\n\n    const moveSlides = (n) => {\n        let index = slideIndex;\n        index += n;\n        if (index > props.dataArray.length - 1) { index = 0 };\n        if (index < 0) { index = props.dataArray.length - 1 };\n        setSlideIndex(index);\n        //   showSlides(slideIndex += n)\n    };\n\n    const currentSlide = (n) => (\n        setSlideIndex(n)\n    );\n\n    const createDotArray = (array) => {\n        for (let i = 0; i < props.dataArray.length; i++) {\n            array.push(\n                <div key={i}>\n                    <span className=\"dot\" onClick={() => currentSlide(i)}></span>\n                </div>\n            );\n        }\n    }\n\n    let dotArray = [];\n    if (isClient) {\n        createDotArray(dotArray)\n    };\n    return (\n        <div id=\"image-component-container\" style={{maxWidth: imageMaxWidth, maxHeight: imageMaxHeight}}>\n            {isClient && props.dataArray ? (\n                <>\n                    <div className=\"slideshow-container\">\n                        <div className=\"mySlides fade\">\n                            <img src={props.dataArray[slideIndex].url} style={styles} />\n                            <div className=\"text\"><p>{props.dataArray[slideIndex].caption}</p></div>\n                        </div>\n                        <a className=\"prev\" onClick={() => moveSlides(-1)}>&#10094;</a>\n                        <a className=\"next\" onClick={() => moveSlides(1)}>&#10095;</a>\n                    </div>\n                    <br></br>\n                    <div id=\"dot-container\">\n                        {dotArray}\n                    </div>\n                </>) :\n                <p>The images need to be rendered again. Please refresh your page.</p>\n            }\n        </div>\n    );\n}\n\nexport default ImageHolder;","import React, {useState, useEffect} from 'react';\nimport ImageHolder from \"./image\";\nimport '../styles/service.scss';\n\nconst ServicePage = (props) => {\n    const [isClient, setClient] = useState(false);\n\n    useEffect(() => setClient(true), []);\n    const imageMaxHeight = isClient ? props.dataArray.maxHeight : \"400px\";\n    const imageMaxWidth = isClient ? props.dataArray.maxWidth : \"400px\";\n\n    const imageContainer = (\n         isClient ? \n            <div id=\"service-image-container\" style={{maxHeight: imageMaxHeight, maxWidth: imageMaxWidth}}>\n            {/* {props.client === \"Residential\" ? \"Residential\" : \"Business\"} */}\n            {props.client === \"Residential\" ?\n                <ImageHolder\n                    dataArray={props.dataArray}\n                    maxHeight={props.maxHeight}\n                    maxWidth={props.maxWidth}\n                /> :\n                (\n                    <div id=\"temp-business-image-container\">\n                        <img\n                            id=\"business-image\"\n                            alt=\"client image\"\n                            className=\"fit-image-to-container\"\n                            src=\"https://galio.lt/wp-content/uploads/2020/05/homepage-verslui.jpg\" />\n                    </div>\n                )}\n\n        </div>\n        :\n\n        <div id=\"service-image-container\" style={{maxHeight: imageMaxHeight, maxWidth: imageMaxWidth}}>\n            <p> Something went wrong.</p>\n            </div>\n\n        \n    \n    );\n\n    const descriptionContainer = (\n        <div className=\"service-text-container\">\n            <div id=\"service-title-container\">\n                <h2 className=\"title\">{props.client}</h2>\n            </div>\n           \n                <p id=\"service-description-text\">\n                    Choose a space as uplifting as your new life chapter.\n                    A place to clear your mind, to connect, to engage.\n                    A place not just to live, but to live well.\n                </p>\n            \n            {/* <button className=\"centered-button\">See our work so far!</button> */}\n        </div>\n    );\n\n    return (\n        <div className=\"services-main-container main-container\" ref={props.reference}>\n            {props.orientation === \"image-left\" ? imageContainer : descriptionContainer}\n            {props.orientation === \"image-left\" ? descriptionContainer : imageContainer}\n        </div>\n    )\n}\n\n\nexport default ServicePage;"],"sourceRoot":""}