{"version":3,"sources":["webpack:///./src/pages/image.js","webpack:///./src/pages/service.js"],"names":["ImageHolder","props","useState","slideIndex","setSlideIndex","isClient","setClient","imageSource","dataArray","url","imageCaption","caption","imageMaxHeight","maxHeight","imageMaxWidth","maxWidth","styles","width","objectFit","useEffect","moveSlides","n","index","length","dotArray","array","i","push","key","className","onClick","createDotArray","id","style","src","ServicePage","imageContainer","client","alt","descriptionContainer","ref","reference","orientation"],"mappings":"sHAAA,0CAmEeA,UAhEK,SAACC,GAAW,IAAD,EACSC,mBAAS,GAAtCC,EADoB,KACRC,EADQ,OAEGF,oBAAS,GAAhCG,EAFoB,KAEVC,EAFU,KAGrBC,EAAcF,EAAWJ,EAAMO,UAAUL,GAAYM,IAAM,GAC3DC,EAAeL,EAAWJ,EAAMO,UAAUL,GAAYQ,QAAU,GAChEC,EAAiBP,EAAWJ,EAAMY,UAAY,QAC9CC,EAAgBT,EAAWJ,EAAMc,SAAW,QAC5CC,EAAS,CAAEC,MAAO,OAAQC,UAAW,QAASL,UAAWD,EAAgBG,SAAUD,GAEzFK,qBAAU,kBACNb,GAAU,KACV,IAEJ,IAAMc,EAAa,SAACC,GAChB,IAAIC,EAAQnB,GACZmB,GAASD,GACGpB,EAAMO,UAAUe,OAAS,IAAKD,EAAQ,GAC9CA,EAAQ,IAAKA,EAAQrB,EAAMO,UAAUe,OAAS,GAClDnB,EAAckB,IAkBdE,EAAW,GAKf,OAHInB,GAZmB,SAACoB,GACpB,IAD+B,IAAD,WACrBC,GACLD,EAAME,KACF,yBAAKC,IAAKF,GACN,0BAAMG,UAAU,MAAMC,QAAS,kBAP3C1B,EAO8DsB,SAHrDA,EAAI,EAAGA,EAAIzB,EAAMO,UAAUe,OAAQG,IAAM,EAAzCA,GAYTK,CAAeP,GAGf,yBAAKQ,GAAG,4BAA4BC,MAAO,CAAElB,SAAUD,EAAeD,UAAWD,GAAkBgB,IAAKvB,GACnGA,EACG,oCACI,yBAAKwB,UAAU,uBACX,yBAAKA,UAAU,iBACX,yBAAKK,IAAK3B,EAAa0B,MAAOjB,IAC9B,yBAAKa,UAAU,QAAO,2BAAInB,KAE9B,uBAAGmB,UAAU,OAAOC,QAAS,kBAAMV,GAAY,KAA/C,KACA,uBAAGS,UAAU,OAAOC,QAAS,kBAAMV,EAAW,KAA9C,MAEJ,6BACA,yBAAKY,GAAG,iBACHR,IAGT,iG,2DC7DhB,sDAmEeW,UA/DK,SAAClC,GAAW,IAAD,EACGC,oBAAS,GAAhCG,EADoB,KACVC,EADU,KAG3Ba,qBAAU,kBAAMb,GAAU,KAAO,IACjC,IAAMM,EAAiBP,EAAWJ,EAAMO,UAAUK,UAAY,QACxDC,EAAgBT,EAAWJ,EAAMO,UAAUO,SAAW,QAEtDqB,EACD/B,EACG,yBAAK2B,GAAG,0BAA0BC,MAAO,CAACpB,UAAWD,EAAgBG,SAAUD,IAE7D,gBAAjBb,EAAMoC,OACH,kBAAC,UAAD,CACI7B,UAAWP,EAAMO,UACjBK,UAAWZ,EAAMY,UACjBE,SAAUd,EAAMc,WAGhB,yBAAKiB,GAAG,iCACJ,yBACIA,GAAG,iBACHM,IAAI,eACJT,UAAU,yBACVK,IAAI,uEAOxB,yBAAKF,GAAG,0BAA0BC,MAAO,CAACpB,UAAWD,EAAgBG,SAAUD,IAC3E,sDAOFyB,EACF,yBAAKV,UAAU,0BACX,yBAAKG,GAAG,2BACJ,wBAAIH,UAAU,SAAS5B,EAAMoC,SAG7B,uBAAGL,GAAG,4BAAN,yJAUZ,OACI,yBAAKH,UAAU,yCAAyCW,IAAKvC,EAAMwC,WACxC,eAAtBxC,EAAMyC,YAA+BN,EAAiBG,EAChC,eAAtBtC,EAAMyC,YAA+BH,EAAuBH","file":"component---src-pages-service-js-78fa8d8b99ffccf9638f.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/image.scss';\n\nconst ImageHolder = (props) => {\n    const [slideIndex, setSlideIndex] = useState(0);\n    const [isClient, setClient] = useState(false);\n    const imageSource = isClient ? props.dataArray[slideIndex].url : \"\";\n    const imageCaption = isClient ? props.dataArray[slideIndex].caption : \"\";\n    const imageMaxHeight = isClient ? props.maxHeight : \"400px\";\n    const imageMaxWidth = isClient ? props.maxWidth : \"400px\";\n    const styles = { width: '100%', objectFit: \"cover\", maxHeight: imageMaxHeight, maxWidth: imageMaxWidth };\n\n    useEffect(() =>\n        setClient(true),\n        []);\n\n    const moveSlides = (n) => {\n        let index = slideIndex;\n        index += n;\n        if (index > props.dataArray.length - 1) { index = 0 };\n        if (index < 0) { index = props.dataArray.length - 1 };\n        setSlideIndex(index);\n        //   showSlides(slideIndex += n)\n    };\n\n    const currentSlide = (n) => (\n        setSlideIndex(n)\n    );\n\n    const createDotArray = (array) => {\n        for (let i = 0; i < props.dataArray.length; i++) {\n            array.push(\n                <div key={i}>\n                    <span className=\"dot\" onClick={() => currentSlide(i)}></span>\n                </div>\n            );\n        }\n    }\n\n    let dotArray = [];\n\n    if (isClient) {\n        createDotArray(dotArray)\n    };\n    return (\n        <div id=\"image-component-container\" style={{ maxWidth: imageMaxWidth, maxHeight: imageMaxHeight }} key={isClient}>\n            {isClient ? (\n                <>\n                    <div className=\"slideshow-container\">\n                        <div className=\"mySlides fade\">\n                            <img src={imageSource} style={styles} />\n                            <div className=\"text\"><p>{imageCaption}</p></div>\n                        </div>\n                        <a className=\"prev\" onClick={() => moveSlides(-1)}>&#10094;</a>\n                        <a className=\"next\" onClick={() => moveSlides(1)}>&#10095;</a>\n                    </div>\n                    <br></br>\n                    <div id=\"dot-container\">\n                        {dotArray}\n                    </div>\n                </>) :\n                <p>The images need to be rendered again. Please refresh your page.</p>\n            }\n        </div>\n    );\n}\n\nexport default ImageHolder;","import React, {useState, useEffect} from 'react';\nimport ImageHolder from \"./image\";\nimport '../styles/service.scss';\n\nconst ServicePage = (props) => {\n    const [isClient, setClient] = useState(false);\n\n    useEffect(() => setClient(true), []);\n    const imageMaxHeight = isClient ? props.dataArray.maxHeight : \"400px\";\n    const imageMaxWidth = isClient ? props.dataArray.maxWidth : \"400px\";\n\n    const imageContainer = (\n         isClient ? \n            <div id=\"service-image-container\" style={{maxHeight: imageMaxHeight, maxWidth: imageMaxWidth}}>\n            {/* {props.client === \"Residential\" ? \"Residential\" : \"Business\"} */}\n            {props.client === \"Residential\" ?\n                <ImageHolder\n                    dataArray={props.dataArray}\n                    maxHeight={props.maxHeight}\n                    maxWidth={props.maxWidth}\n                /> :\n                (\n                    <div id=\"temp-business-image-container\">\n                        <img\n                            id=\"business-image\"\n                            alt=\"client image\"\n                            className=\"fit-image-to-container\"\n                            src=\"https://galio.lt/wp-content/uploads/2020/05/homepage-verslui.jpg\" />\n                    </div>\n                )}\n\n        </div>\n        :\n\n        <div id=\"service-image-container\" style={{maxHeight: imageMaxHeight, maxWidth: imageMaxWidth}}>\n            <p> Something went wrong.</p>\n            </div>\n\n        \n    \n    );\n\n    const descriptionContainer = (\n        <div className=\"service-text-container\">\n            <div id=\"service-title-container\">\n                <h2 className=\"title\">{props.client}</h2>\n            </div>\n           \n                <p id=\"service-description-text\">\n                    Choose a space as uplifting as your new life chapter.\n                    A place to clear your mind, to connect, to engage.\n                    A place not just to live, but to live well.\n                </p>\n            \n            {/* <button className=\"centered-button\">See our work so far!</button> */}\n        </div>\n    );\n\n    return (\n        <div className=\"services-main-container main-container\" ref={props.reference}>\n            {props.orientation === \"image-left\" ? imageContainer : descriptionContainer}\n            {props.orientation === \"image-left\" ? descriptionContainer : imageContainer}\n        </div>\n    )\n}\n\n\nexport default ServicePage;"],"sourceRoot":""}